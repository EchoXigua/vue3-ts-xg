{
  "compilerOptions": {
    "target": "esnext",
    // "module": "umd", //支持多种模块化commonjs es6
    "module": "esnext",
    "strict": true,
    //对jsx进行一些处理
    "jsx": "preserve",
    "importHelpers": true,
    //按照node的方式取解析模块
    "moduleResolution": "node",
    //跳过对一些库的类型检测  axios lodash ... 如果两个库的定义的类型一直,就会有问题
    "skipLibCheck": true,
    //es module 和commonjs混合使用 下面两个一起使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    //生成sourceMap文件
    "sourceMap": true,
    //文件在解析时,基本url
    "baseUrl": ".",
    "types": ["webpack-env"],
    //路径解析  在vue.config.js 中配置了路径,ts如果报错,需要在这里配置一下
    //和webpack中的alias类似
    "paths": {
      "@/*": ["src/*"]
    },
    //指定在项目中可以使用哪些库的类型
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  //排除解析的文件,从node_modules中引入的文件会解析
  "exclude": ["node_modules"]
}
